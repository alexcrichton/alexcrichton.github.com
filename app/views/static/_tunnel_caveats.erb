<strong>Port 22 blocked?</strong> <%= link_to_function '[show/hide]', "$('#port22').slideToggle()" %>
<div id="port22" style="display:none;">
  Try a different one! Most likely port 443. It's normally dedicated for SSL traffic and is rarely blocked, unless they
  don't want you doing secure things online for some reason... Just make sure the SSH server is listening on this port.
  <pre>
    ssh <em>hostname</em> -p 443
  </pre>
</div>

<br />
<strong>Connections dropped and must use proxy to get
  Webblags?</strong> <%= link_to_function '[show/hide]', "$('#proxy').slideToggle()" %>
<div id="proxy" style="display:none;">
  A nifty tool called <a href="http://www.agroman.net/corkscrew/">corkscrew</a> is available to pipe SSH connections
  through proxies. To enable the use
  of this, in your .ssh/config file, you'll have to add the following line to the host options:
  <pre>
    # ~/.ssh/config
    Host <em>alias</em>
      Hostname ...
      User ...
      ...
      ProxyCommand /usr/bin/corkscrew <em>proxyhostname proxyport</em> %h %p
      ...
  </pre>
  With the %h and %p and all. Just replace the italicized and dotted stuff. And then:
  <pre>
    ssh <em>alias</em>
  </pre>
</div>

<br />
<strong>Connections dropped and proxy requires simple
  authentication?</strong> <%= link_to_function '[show/hide]', "$('#simple').slideToggle()" %>
<div id="simple" style="display:none;">
  If basic authentication is used, then on the <code>ProxyCommand</code> line in the <code>.ssh/config</code> file,
  after <code>%p</code> you'll have to add a filename, like <code>~/.ssh/authfile</code> which has your username
  and password in the format of <code>username:password</code> on the first line. That's all you need in the file.<br />

  <hr />
  <pre>
    # ~/.ssh/config
    Host <em>alias</em>
      ...
      ProxyCommand /usr/bin/corkscrew <em>proxyhostname proxyport</em> %h %p ~/.ssh/authfile
  </pre>
  <pre>
    # ~/.ssh/authfile
    admin:password
  </pre>
  Then again, ssh out normally and slap on whatever options you want:
  <pre>
    ssh <em>alias</em>
  </pre>
</div>

<br />
<strong>Connections dropped and proxy requires NTLM
  authentication?</strong> <%= link_to_function '[show/hide]', "$('#ntlm').slideToggle()" %>
<div id="ntlm" style="display:none">
  If NTLM authentication is used, then things get more interesting. Corkscrew can't do it, so use another proxy! A
  little program called <a href="http://sourceforge.net/project/showfiles.php?group_id=197861">CNTLM</a> is it's own
  proxy which attaches the authentication information to all packet requests.
  With this, just direct your corkscrew to the CNTLM proxy, hostname being localhost, your computer. Of course you'll
  have to configure CNTLM as well and start it up beforehand and leave it running throughout...
  <hr />
  Example <code>/etc/cntlm.conf</code>: <%= link_to_function '[show/hide]', "$('#cntlmconf').slideToggle()" %>
  <pre id="cntlmconf" style="display:none;">
    #
    # Cntlm Authentication Proxy Configuration
    #
    # NOTE: all values are parsed literally, do NOT escape spaces,
    # do not quote. Use 0600 perms if you use plaintext password.
    #

    Username        riceti # your username
    Domain          DMPS   # some domain name... try to get somehow
    # Regenerate these hashes through 'cntlm -H' after filling in the username
    # and domain for the network.
    PassLM          8F21BDAFB3313C1A3DD9A4DC8CB1F253
    PassNT          702AA998C957DF5EDC53D0F2DA69469C
    PassNTLMv2      8D6CAA261D33971763D79A41AC21F9C3    # Only for user 'riceti', domain 'DMPS'
    #Password      ...# Put your plaintext password here if you'd rather not use hashes

    #Workstation    netbios_hostname   # Should be auto-guessed

    Proxy      hs-proxy.dmps.k12.ia.us:80 # The proxy here which requires authentication

    #
    # This is the port number where Cntlm will listen
    #
    Listen     3128

    #
    # If you wish to use the SOCKS5 proxy feature as well, uncomment
    # the following option, SOCKS5. It can be used several times
    # to have SOCKS5 on more than one port or on different network
    # interfaces (specify explicit source address for that).
    #
    # WARNING: The service accepts all requests, unless you use
    # SOCKS5User and make authentication mandatory. SOCKS5User
    # can be used repeatedly for a whole bunch of individual accounts.
    #
    #SOCKS5Proxy   8010
    #SOCKS5User    dave:password

    #
    # Enable to allow access from other computers
    #
    #Gateway   yes # want your friends to use this proxy?

    #
    # Useful in Gateway mode to allow/restrict certain IPs
    #
    #Allow    127.0.0.1
    #Allow    172.23.65.0/24
    #Allow    192.168.0.0/16
    #Deny     0.0.0.0/0

    #
    # Headers which should be replaced if present in the request
    # just to screw with them
    Header    User-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows 98)
  </pre>
  <pre>
    Starting cntlm:
    cntlm -c /path/to/config/file
  </pre>
  <pre>
    # ~/.ssh/config
    Host <em>alias</em>
      ...
      ProxyCommand /usr/bin/corkscrew localhost <em>cntlmport</em> %h %p
  </pre>
  Then again, ssh out normally and slap on whatever options you want:
  <pre>
    ssh <em>alias</em>
  </pre>
</div>

<br />
<strong>Connection still not made?</strong>  <%= link_to_function '[show/hide]', "$('#help').slideToggle()" %>
<div id="help" style="display:none">
  I guess I hadn't thought of that setup... Try searching the internet and please let me know. I'd be interested
  in knowing your setup and what more could be needed. If I can solve, I'll add here :D<br/>
  <%= mail_to 'alexc605@gmail.com' %>
</div>
